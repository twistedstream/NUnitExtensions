<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <MSBuildCommunityTasksPath>$(MSBuildProjectDirectory)\..</MSBuildCommunityTasksPath>
    <BuildOutputPath>$(MSBuildProjectDirectory)\..\out</BuildOutputPath>
    <InputFilePath>$(MSBuildProjectDirectory)\..\Input.targets</InputFilePath>
    <Build_SourceDirPath>$(MSBuildProjectDirectory)\..\..\src</Build_SourceDirPath>
  </PropertyGroup>

  <Import Project="$(MSBuildCommunityTasksPath)\MSBuild.Community.Tasks.targets"/>
  <Import Project="$(InputFilePath)" />
  <Import Project="$(MSBuildProjectDirectory)\Version.targets" />

  <PropertyGroup Condition=" '$(BuildConfiguration)' == '' ">
    <BuildConfiguration>Release</BuildConfiguration>
  </PropertyGroup>

  <Target Name="ValidateInput">
    <Error Condition="'$(Input_Company)' == ''" Text="Property 'Input_Company' cannot be empty." />
    <Error Condition="'$(Input_Product)' == ''" Text="Property 'Input_Product' cannot be empty." />
    <Error Condition="'$(Input_VersionMajor)' == ''" Text="Property 'Input_VersionMajor' cannot be empty." />
    <Error Condition="'$(Input_VersionMinor)' == ''" Text="Property 'Input_VersionMinor' cannot be empty." />
    <Error Condition="'$(Input_VersionRevision)' == ''" Text="Property 'Input_VersionRevision' cannot be empty." />
  </Target>

  <Target Name="InitOutput">
    <DeleteTree Directories="$(BuildOutputPath)" Recursive="True" />
    <MakeDir Directories="$(BuildOutputPath)" />
  </Target>
  
  <Target Name="Clean">
    <DeleteTree Directories="$(Build_SourceDirPath)\**\obj\**;$(Build_SourceDirPath)\**\bin\**" Recursive="True" />
  </Target>

  <!-- Projects to Build -->
  <ItemGroup>
    <ProjectFiles Include="$(Build_SourceDirPath)\**\*.sln">
      <Properties>Configuration=$(BuildConfiguration)</Properties>
    </ProjectFiles>
  </ItemGroup>

  <Target Name="Compile" DependsOnTargets="Clean">
    <MSBuild Projects="@(ProjectFiles)" />
  </Target>

  <Target Name="RunUnitTest">
    <CreateItem Include="$(Build_SourceDirPath)\**\bin\$(BuildConfiguration)\*.UnitTest.dll">
      <Output TaskParameter="Include" ItemName="TestAssembly" />
    </CreateItem>

    <NUnit ToolPath="$(Build_SourceDirPath)\packages\NUnit.2.5.10.11092\tools" 
           DisableShadowCopy="true" 
           Assemblies="@(TestAssembly)" 
           OutputXmlFile="$(BuildOutputPath)\TestResult.xml" />
  </Target>
  
  <Target Name="CreatePackage" DependsOnTargets="Version">
    <!-- create package lib directory -->
    <PropertyGroup>
        <PackageOutputPath>$(BuildOutputPath)\package</PackageOutputPath>
        <BinaryOutputPath>$(PackageOutputPath)\lib\net</BinaryOutputPath>
    </PropertyGroup>  
    <MakeDir Directories="$(BinaryOutputPath)" />
    
    <!-- copy binaries -->
    <PropertyGroup>
        <BinarySourcePath>$(Build_SourceDirPath)\NUnitExtensions\bin\$(BuildConfiguration)</BinarySourcePath>
        <AssemblyName>TS.NUnitExtensions</AssemblyName>
    </PropertyGroup>  
    <ItemGroup>
        <Binaries Include="$(BinarySourcePath)\$(AssemblyName).dll; $(BinarySourcePath)\$(AssemblyName).xml" />
    </ItemGroup>
    <Copy SourceFiles="@(Binaries)" 
          DestinationFolder="$(BinaryOutputPath)" />
    
    <!-- make a copy of the source nuspec file so we can inject version values -->
    <PropertyGroup>
        <SpecFilename>NUnitExtensions.nuspec</SpecFilename>
        <CompleteSpecPath>$(PackageOutputPath)\$(SpecFilename)</CompleteSpecPath>
    </PropertyGroup>  
    <Copy SourceFiles="$(MSBuildProjectDirectory)\..\$(SpecFilename)" 
          DestinationFiles="$(CompleteSpecPath)" />

    <!-- inject nuspec file with missing version values -->
    <XmlUpdate XmlFileName="$(CompleteSpecPath)"
               XPath="/package/metadata/title"
               Value="$(Input_Product)" />
    <XmlUpdate XmlFileName="$(CompleteSpecPath)"
               XPath="/package/metadata/version"
               Value="$(Version_AssemblyVersion)" />
    <XmlUpdate XmlFileName="$(CompleteSpecPath)"
               XPath="/package/metadata/copyright"
               Value="$(Version_AssemblyCopyright)" />
    
    <!-- build nuget package -->
    <NuGetPack ToolPath="$(Build_SourceDirPath)\.nuget"
               File="$(CompleteSpecPath)" 
               OutputDirectory="$(PackageOutputPath)" />
  </Target>
  
  <Target Name="Build">
    <CallTarget Targets="ValidateInput; InitOutput; Version; Compile; RunUnitTest; CreatePackage" />
  </Target>
</Project>