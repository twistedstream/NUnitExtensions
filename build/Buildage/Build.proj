<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <MSBuildCommunityTasksPath>$(MSBuildProjectDirectory)</MSBuildCommunityTasksPath>
    <BuildOutputPath>$(MSBuildProjectDirectory)\out</BuildOutputPath>
    <GlobalAssemblyInfoProjectPath>$(MSBuildProjectDirectory)\GlobalAssemblyInfo.proj</GlobalAssemblyInfoProjectPath>
    <SourceRootPath>$(MSBuildProjectDirectory)\..\src</SourceRootPath>
  </PropertyGroup>

  <Import Project="$(MSBuildCommunityTasksPath)\MSBuild.Community.Tasks.targets"/>
  <Import Project="$(GlobalAssemblyInfoProjectPath)" Condition="Exists('$(GlobalAssemblyInfoProjectPath)')"/>

  <PropertyGroup Condition=" '$(BuildConfiguration)' == '' ">
    <BuildConfiguration>Release</BuildConfiguration>
  </PropertyGroup>

  <PropertyGroup>
    <Company_Padded Condition=" '$(Company)' != '' "> $(Company)</Company_Padded>
    <Version_Major Condition=" '$(Version_Major)' == '' ">1</Version_Major>
    <Version_Minor Condition=" '$(Version_Minor)' == '' ">0</Version_Minor>
    <Version_Revision Condition=" '$(Version_Revision)' == '' ">0</Version_Revision>
    <Version_Information_Padded Condition=" '$(Version_Information)' != '' "> $(Version_Information)</Version_Information_Padded>
  </PropertyGroup>

  <Choose>
    <!-- No build server - use default build number -->
    <When Condition=" '$(BUILD_NUMBER)' == '' ">
      <PropertyGroup>
        <Version_Build>0</Version_Build>
      </PropertyGroup>
    </When>
    <!-- Build number from build server passed in -->
    <Otherwise>
      <PropertyGroup>
        <Version_Build>$(BUILD_NUMBER)</Version_Build>
      </PropertyGroup>
    </Otherwise>
  </Choose>

  <Target Name="InitBuildOutput">
    <DeleteTree Directories="$(BuildOutputPath)" Recursive="True" />
    <MakeDir Directories="$(BuildOutputPath)" />
  </Target>
  
  <Target Name="Clean">
    <DeleteTree Directories="$(SourceRootPath)\**\obj\**;$(SourceRootPath)\**\bin\**" Recursive="True" />
  </Target>

  <Target Name="Version">
    <Time>
      <Output TaskParameter="Year" PropertyName="Year" />
    </Time>

    <Attrib Files="$(MSBuildProjectDirectory)\GlobalAssemblyInfo.cs" ReadOnly="False" />

    <PropertyGroup>
      <AssemblyVersion>$(Version_Major).$(Version_Minor).$(Version_Revision)</AssemblyVersion>
      <AssemblyFileVersion>$(AssemblyVersion).$(Version_Build)</AssemblyFileVersion>
      <AssemblyInformationalVersion>$(AssemblyVersion)$(Version_Information_Padded)</AssemblyInformationalVersion>
      <AssemblyCopyright>Copyright © $(Year)$(Company_Padded). All rights reserved.</AssemblyCopyright>
    </PropertyGroup>

    <Message Text="AssemblyInformationalVersion: $(AssemblyInformationalVersion)"/>
    <Message Text="AssemblyVersion:              $(AssemblyVersion)"/>
    <Message Text="AssemblyFileVersion:          $(AssemblyFileVersion)"/>

    <AssemblyInfo CodeLanguage="CS"
                  OutputFile="$(SourceRootPath)\GlobalAssemblyInfo.cs"
                  GenerateClass="true"
                  
                  AssemblyCompany="$(Company)"
                  AssemblyProduct="$(Product)"
                  AssemblyCopyright="$(AssemblyCopyright)"
                  AssemblyInformationalVersion="$(AssemblyInformationalVersion)"
                
                  AssemblyVersion="$(AssemblyVersion)"
                  AssemblyFileVersion="$(AssemblyFileVersion)" />
  </Target>

  <!-- Projects to Build -->
  <ItemGroup>
    <ProjectFiles Include="$(SourceRootPath)\**\*.sln">
      <Properties>Configuration=$(BuildConfiguration)</Properties>
    </ProjectFiles>
  </ItemGroup>

  <Target Name="Compile" DependsOnTargets="Clean;Version">
    <MSBuild Projects="@(ProjectFiles)" />
  </Target>

  <Target Name="RunUnitTest" DependsOnTargets="InitBuildOutput">
    <CreateItem Include="$(SourceRootPath)\**\bin\$(BuildConfiguration)\*.UnitTest.dll">
      <Output TaskParameter="Include" ItemName="TestAssembly" />
    </CreateItem>

    <NUnit ToolPath="$(SourceRootPath)\packages\NUnit.2.5.10.11092\tools" 
           DisableShadowCopy="true" 
           Assemblies="@(TestAssembly)" 
           OutputXmlFile="$(BuildOutputPath)\TestResult.xml" />
  </Target>
  
  <Target Name="CreatePackage" DependsOnTargets="Version">
    <!-- create package lib directory -->
    <PropertyGroup>
        <PackageOutputPath>$(BuildOutputPath)\package</PackageOutputPath>
        <BinaryOutputPath>$(PackageOutputPath)\lib\net</BinaryOutputPath>
    </PropertyGroup>  
    <MakeDir Directories="$(BinaryOutputPath)" />
    
    <!-- copy binaries -->
    <PropertyGroup>
        <BinarySourcePath>$(SourceRootPath)\NUnitExtensions\bin\$(BuildConfiguration)</BinarySourcePath>
        <AssemblyName>TS.NUnitExtensions</AssemblyName>
    </PropertyGroup>  
    <ItemGroup>
        <Binaries Include="$(BinarySourcePath)\$(AssemblyName).dll; $(BinarySourcePath)\$(AssemblyName).xml" />
    </ItemGroup>
    <Copy SourceFiles="@(Binaries)" 
          DestinationFolder="$(BinaryOutputPath)" />
    
    <!-- make a copy of the source nuspec file so we can inject version values -->
    <PropertyGroup>
        <SpecFilename>NUnitExtensions.nuspec</SpecFilename>
        <CompleteSpecPath>$(PackageOutputPath)\$(SpecFilename)</CompleteSpecPath>
    </PropertyGroup>  
    <Copy SourceFiles="$(MSBuildProjectDirectory)\$(SpecFilename)" 
          DestinationFiles="$(CompleteSpecPath)" />

    <!-- inject nuspec file with missing version values -->
    <XmlUpdate XmlFileName="$(CompleteSpecPath)"
               XPath="/package/metadata/title"
               Value="$(Product)" />
    <XmlUpdate XmlFileName="$(CompleteSpecPath)"
               XPath="/package/metadata/version"
               Value="$(AssemblyVersion)" />
    <XmlUpdate XmlFileName="$(CompleteSpecPath)"
               XPath="/package/metadata/copyright"
               Value="$(AssemblyCopyright)" />
    
    <!-- build nuget package -->
    <NuGetPack ToolPath="$(SourceRootPath)\.nuget"
               File="$(CompleteSpecPath)" 
               OutputDirectory="$(PackageOutputPath)" />
  </Target>
  
  <Target Name="Build">
    <CallTarget Targets="Compile; RunUnitTest; CreatePackage" />
  </Target>
</Project>